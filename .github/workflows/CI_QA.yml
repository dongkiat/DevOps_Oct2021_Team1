name: CI for QA

on:
  push:
    branches: [main]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
        
    - name: Install Libraries
      run: |
        pip install flake8 pytest pytest-cov
      
    - name: Checkout Own Repo
      uses: actions/checkout@v2
      with: 
        repository: np-devops-team1/DevOps_Oct2021_Team1_Test
        
    - name: Checkout Test Script
      uses: actions/checkout@v2
      with:
        files: test_main.py
        
    - name: Begin Pytest
      run: |
        python -m pytest test_main.py --junit-xml pytest.xml

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: pytest.xml
        
  publish-test-results:
    name: publish test results
    needs: build
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: results
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml
          
      - name: Install xmllint
        run: |
          sudo apt-get install -y libxml2-utils
        
      - name: Save XML Attributes
        run: |
          total=$(xmllint --xpath "string(//*[local-name()='testsuite']/@tests)" artifacts/pytest.xml)
          skipped=$(xmllint --xpath "string(//*[local-name()='testsuite']/@skipped)" artifacts/pytest.xml)
          failed=$(xmllint --xpath "string(//*[local-name()='testsuite']/@failures)" artifacts/pytest.xml)
          error=$(xmllint --xpath "string(//*[local-name()='testsuite']/@errors)" artifacts/pytest.xml)
          passed=$((total-skipped-failed-error))
          
          echo "TOTAL=$total" >> $GITHUB_ENV
          echo "SKIPPED=$skipped" >> $GITHUB_ENV
          echo "FAILED=$failed" >> $GITHUB_ENV
          echo "ERROR=$error" >> $GITHUB_ENV
          echo "PASSED=$passed" >> $GITHUB_ENV
          
      - name: Calculate Metrics
        run: |
          echo "${{ env.PASSED }}"
